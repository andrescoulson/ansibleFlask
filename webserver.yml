- hosts: webservers
  remote_user: root
  sudo: yes
  vars_files:
    - constant.yml


  tasks:
    - name: Enable ufw
      ufw:
        state: enabled
        policy: allow

    - name: Enable SSH
      ufw:
        rule: limit
        port: ssh
        proto: tcp

    - name: Enable HTTP
      ufw:
        rule: allow
        port: 80
        proto: tcp


    - name: Install main packages
      action: apt pkg={{ item }} state=installed update-cache=yes
      with_items: "{{ system_packages }}"

    - name: Config apache
      apache2_module:
        state: present
        name: wsgi

    - name: Clone repo git
      git:
        repo: '{{ project_repo }}'
        dest: '{{ source_repo }}'

    - name: Creates directory
      file: path=/var/www/projects state=directory

    - name: Move projects to root /var/www
      command: mv -v {{ source_repo }} /var/www/projects

    - name: Install requeriments
      pip:
        requirements: '{{ install_root }}requeriments.txt'

    - name: copy config apache
      template: src=files/flask.conf dest=/etc/apache2/sites-available/flask.conf

    - name: make file .wsgi root project
      template: src=files/app.wsgi dest=/var/www/projects/app.wsgi

    - name: a2ensite enable project
      command: a2ensite flask

    - name: Ensure bash, OpenSSl, and libssl are the latest versions
      apt: name={{ item }} update_cache={{ update_apt_cache }} state=latest
      with_items:
        - bash
        - openssl
        - libssl-dev
        - libssl-doc
      tags: packages

    - name: Install PostgreSQL
      apt: name={{ item }} update_cache={{ update_apt_cache }} state=installed
      with_items:
          - postgresql
          - postgresql-contrib
          - libpq-dev
          - python-psycopg2
      tags: packages

    - name: Ensure the PostgreSQL service is running
      service: name=postgresql state=started enabled=yes

    - name: Ensure database is created
      sudo_user: postgres
      postgresql_db: name={{ db_name }}
                     encoding='UTF-8'
                     lc_collate='en_US.UTF-8'
                     lc_ctype='en_US.UTF-8'
                     template='template0'
                     state=present

    - name: Ensure user has access to the database
      sudo_user: postgres
      postgresql_user: db={{ db_name }}
                         name={{ db_user }}
                         password={{ db_password }}
                         priv=ALL
                         state=present

    - name: Ensure user does not have unnecessary privileges
      sudo_user: postgres
      postgresql_user: name={{ db_user }}
                       role_attr_flags=NOSUPERUSER,NOCREATEDB
                       state=present

    - name: restart apache
      service: name=apache2 state=restarted

    - name: run my script db! init
      command: python "{{ root_app }}"/manage.py db init

    - name: run my script db! migrate
      command: python "{{ root_app }}"/manage.py db migrate

    - name: run my script db! upgrade
      command: python "{{ root_app }}"/manage.py db upgrade

    - name: restart apache
      service: name=apache2 state=restarted